name: Build and Publish Images

on:
  push:
    branches: [ main ]
    tags:
      - 'node-v*'
      - 'sequencer-v*'
  workflow_dispatch:
    inputs:
      build_node:
        description: 'Build Node image'
        required: false
        default: true
        type: boolean
      build_sequencer:
        description: 'Build Sequencer image'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: node
            context: .
            dockerfile: Dockerfile
            image: ${{ github.repository_owner }}/facet-node
          - name: sequencer
            context: ./sequencer
            dockerfile: Dockerfile
            image: ${{ github.repository_owner }}/facet-sequencer

    steps:
      - name: Determine build target
        id: should_build
        run: |
          if [[ "${{ github.event_name }}" != "workflow_dispatch" ]]; then
            echo "build=true" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.service.name }}" == "node" && "${{ inputs.build_node }}" == "true" ]]; then
            echo "build=true" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.service.name }}" == "sequencer" && "${{ inputs.build_sequencer }}" == "true" ]]; then
            echo "build=true" >> $GITHUB_OUTPUT
          else
            echo "build=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout
        if: steps.should_build.outputs.build == 'true'
        uses: actions/checkout@v4

      - name: Log in to GHCR
        if: steps.should_build.outputs.build == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        if: steps.should_build.outputs.build == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.service.image }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag,enable=${{ matrix.service.name == 'node' && startsWith(github.ref, 'refs/tags/node-v') }}
            type=ref,event=tag,enable=${{ matrix.service.name == 'sequencer' && startsWith(github.ref, 'refs/tags/sequencer-v') }}
            type=sha

      - name: Set up Docker Buildx
        if: steps.should_build.outputs.build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        if: steps.should_build.outputs.build == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/0xfacet/${{ matrix.service.name == 'node' && 'facet-node' || 'facet-sequencer' }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/0xfacet/${{ matrix.service.name == 'node' && 'facet-node' || 'facet-sequencer' }}:buildcache,mode=max
